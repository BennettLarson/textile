// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package api_pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NewUserRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewUserRequest) Reset()         { *m = NewUserRequest{} }
func (m *NewUserRequest) String() string { return proto.CompactTextString(m) }
func (*NewUserRequest) ProtoMessage()    {}
func (*NewUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_c09a972111ac776a, []int{0}
}
func (m *NewUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewUserRequest.Unmarshal(m, b)
}
func (m *NewUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewUserRequest.Marshal(b, m, deterministic)
}
func (dst *NewUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewUserRequest.Merge(dst, src)
}
func (m *NewUserRequest) XXX_Size() int {
	return xxx_messageInfo_NewUserRequest.Size(m)
}
func (m *NewUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewUserRequest proto.InternalMessageInfo

type NewUserReply struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewUserReply) Reset()         { *m = NewUserReply{} }
func (m *NewUserReply) String() string { return proto.CompactTextString(m) }
func (*NewUserReply) ProtoMessage()    {}
func (*NewUserReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_c09a972111ac776a, []int{1}
}
func (m *NewUserReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewUserReply.Unmarshal(m, b)
}
func (m *NewUserReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewUserReply.Marshal(b, m, deterministic)
}
func (dst *NewUserReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewUserReply.Merge(dst, src)
}
func (m *NewUserReply) XXX_Size() int {
	return xxx_messageInfo_NewUserReply.Size(m)
}
func (m *NewUserReply) XXX_DiscardUnknown() {
	xxx_messageInfo_NewUserReply.DiscardUnknown(m)
}

var xxx_messageInfo_NewUserReply proto.InternalMessageInfo

func (m *NewUserReply) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *NewUserReply) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func init() {
	proto.RegisterType((*NewUserRequest)(nil), "api.pb.NewUserRequest")
	proto.RegisterType((*NewUserReply)(nil), "api.pb.NewUserReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// APIClient is the client API for API service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type APIClient interface {
	NewUser(ctx context.Context, in *NewUserRequest, opts ...grpc.CallOption) (*NewUserReply, error)
}

type aPIClient struct {
	cc *grpc.ClientConn
}

func NewAPIClient(cc *grpc.ClientConn) APIClient {
	return &aPIClient{cc}
}

func (c *aPIClient) NewUser(ctx context.Context, in *NewUserRequest, opts ...grpc.CallOption) (*NewUserReply, error) {
	out := new(NewUserReply)
	err := c.cc.Invoke(ctx, "/api.pb.API/NewUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// APIServer is the server API for API service.
type APIServer interface {
	NewUser(context.Context, *NewUserRequest) (*NewUserReply, error)
}

func RegisterAPIServer(s *grpc.Server, srv APIServer) {
	s.RegisterService(&_API_serviceDesc, srv)
}

func _API_NewUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).NewUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.pb.API/NewUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).NewUser(ctx, req.(*NewUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _API_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.pb.API",
	HandlerType: (*APIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NewUser",
			Handler:    _API_NewUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_api_c09a972111ac776a) }

var fileDescriptor_api_c09a972111ac776a = []byte{
	// 168 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0x2c, 0xc8, 0xd4,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x03, 0x33, 0x93, 0x94, 0x04, 0xb8, 0xf8, 0xfc, 0x52,
	0xcb, 0x43, 0x8b, 0x53, 0x8b, 0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x94, 0x4c, 0xb8, 0x78,
	0xe0, 0x22, 0x05, 0x39, 0x95, 0x42, 0x7c, 0x5c, 0x4c, 0x9e, 0x2e, 0x12, 0x8c, 0x0a, 0x8c, 0x1a,
	0x9c, 0x41, 0x4c, 0x9e, 0x2e, 0x42, 0x22, 0x5c, 0xac, 0x25, 0xf9, 0xd9, 0xa9, 0x79, 0x12, 0x4c,
	0x60, 0x21, 0x08, 0xc7, 0xc8, 0x81, 0x8b, 0xd9, 0x31, 0xc0, 0x53, 0xc8, 0x92, 0x8b, 0x1d, 0xaa,
	0x59, 0x48, 0x4c, 0x0f, 0x62, 0x85, 0x1e, 0xaa, 0xf9, 0x52, 0x22, 0x18, 0xe2, 0x05, 0x39, 0x95,
	0x4a, 0x0c, 0x4e, 0x5a, 0x5c, 0xe2, 0x99, 0xf9, 0x7a, 0x25, 0xa9, 0x15, 0x25, 0x99, 0x39, 0xa9,
	0x7a, 0xe9, 0x45, 0x05, 0xc9, 0xf1, 0x50, 0x8e, 0x13, 0x7b, 0x08, 0x84, 0x11, 0xc0, 0xb8, 0x88,
	0x89, 0x39, 0x24, 0xc4, 0x35, 0x89, 0x0d, 0xec, 0x09, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x29, 0x39, 0xb8, 0xa9, 0xd1, 0x00, 0x00, 0x00,
}
